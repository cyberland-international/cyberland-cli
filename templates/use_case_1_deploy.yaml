name: Deployment

on:
  push:
    branches:
      - test
      - production

env:
  # example values: marymount-codedeploy-app, bigheart-codedeploy-app
  CODE_DEPLOY_APPLICATION_NAME: %%%.ProjectName%%%-codedeploy-app

# Ensure that only one instance of this workflow run at a time
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency: deployment-pipeline

jobs:
  deploy-to-test:
    name: Deploy to test server
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: "Create CodeDeploy Deployment to test server"
        id: create_codedeploy_deployment
        run: |
          aws deploy create-deployment \
            --application-name shared-test-codedeploy-app \
            --deployment-group-name test \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --query deploymentId > deploymentId.txt
          echo "CODEDEPLOY_DEPLOYMENT_ID=$(cat deploymentId.txt)" >> $GITHUB_ENV

      - name: "Pool CodeDeploy to check for success or failure of deployment"
        run: |
          aws deploy wait deployment-successful --deployment-id ${{ env.CODEDEPLOY_DEPLOYMENT_ID }}

      - name: "Get CodeDeploy deployment status"
        run: |
          aws deploy get-deployment --deployment-id ${{ env.CODEDEPLOY_DEPLOYMENT_ID }}


  deploy-to-production:
    name: Deploy to production server
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: "Create CodeDeploy Deployment to production server"
        id: create_codedeploy_deployment
        run: |
          aws deploy create-deployment \
            --application-name $CODE_DEPLOY_APPLICATION_NAME \
            --deployment-group-name production \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --query deploymentId > deploymentId.txt
          echo "CODEDEPLOY_DEPLOYMENT_ID=$(cat deploymentId.txt)" >> $GITHUB_ENV

      - name: "Pool CodeDeploy to check for success or failure of deployment"
        run: |
          aws deploy wait deployment-successful --deployment-id ${{ env.CODEDEPLOY_DEPLOYMENT_ID }}

      - name: "Get CodeDeploy deployment status"
        run: |
          aws deploy get-deployment --deployment-id ${{ env.CODEDEPLOY_DEPLOYMENT_ID }}
